<?xml version="1.0" encoding="UTF-8"?>

<zk>
	<system-config>
		<disable-event-thread>true</disable-event-thread>
	</system-config>

	<!-- 
	<listener>
		<listener-class>es.gva.dgm.tra.ctt.gtt.web.UserAgentInterceptor
		</listener-class>
	</listener>
	 -->

	<listener>
		<listener-class>es.caib.consola.GTTVariableResolver
		</listener-class>
	</listener>

	<session-config>
		<session-timeout>3600</session-timeout>
	</session-config>

	<device-config>
		<device-type>ajax</device-type>
		<timeout-uri>/timeout.zul</timeout-uri><!-- An empty URL can cause the 
			browser to reload the same URL -->
		<embed>
		<![CDATA[<script type="text/javascript">
	
			/* 	Sobreescribimos la función zUtl.progressbox()
				ubicada en zk-5.0.4.jar\web\js\zk\utl.js 
				
				Este código es realmente del fichero src zk-5.0.4.jar\web\js\zk\utl.src.js
				que es el mismo que en utl.js, pero más claro y legible, con saltos de línea, etc.
				
				En alguna versión futura de ZK, el valor de "mask" se podrá indicar como un simple parámetro.
				
				Ver: http://www.zkoss.org/forum/listComment/10981
				
				El valor de la variable "msg" se obtiene de los ficheros msgzk.js de zk-5.0.4.jar\web\js\zk\lang\
			*/

			zUtl.progressbox = function(id, msg, mask, icon, _opts) {

				/* 	Normalmente mask viene como undefined. 
					Simplemente se setea a true y ya.
				*/
				mask = true;
				
				if (mask && zk.Page.contained.length) {
					for (var c = zk.Page.contained.length, e = zk.Page.contained[--c]; e; e = zk.Page.contained[--c]) {
						if (!e._applyMask)
							e._applyMask = new zk.eff.Mask({
								id: e.uuid + "-mask",
								message: msg,
								anchor: e.$n()
							});
					}
					return;
				}

				if (_opts && _opts.busy) {
					zk.busy++;
					jq.focusOut(); 
				}

				var x = jq.innerX(), y = jq.innerY(),
					style = ' style="left:'+x+'px;top:'+y+'px"',
					idtxt = id + '-t',
					idmsk = id + '-m',
					html = '<div id="'+id+'"';
				
				if (mask)
					html += '><div id="' + idmsk + '" class="z-modal-mask"'+style+'></div';
				html += '><div id="'+idtxt+'" class="z-loading"'+style
					+'><div class="z-loading-indicator"><span class="z-loading-icon"></span> '
					+msg+'</div></div>';
				if (icon)
					html += '<div class="' + icon + '"></div>';
				jq(document.body).append(html + '</div>');

				var $n = jq(id, zk),
					n = $n[0],
					$txt = jq(idtxt, zk),
					txt = $txt[0],
					st = txt.style;
				if (mask)
					n.z_mask = new zk.eff.FullMask({
						mask: jq(idmsk, zk)[0],
						zIndex: $txt.css('z-index') - 1
					});

				if (mask && $txt.length) { 
					st.left = jq.px((jq.innerWidth() - txt.offsetWidth) / 2 + x);
					st.top = jq.px((jq.innerHeight() - txt.offsetHeight) / 2 + y);
				} else {
					var pos = zk.progPos;
					if (pos) {
						var left,
							top,
							width = jq.innerWidth(),
							height = jq.innerHeight(),
							wdgap = width - zk(txt).offsetWidth(),
							hghgap = height - zk(txt).offsetHeight();

						if (pos.indexOf("mouse") >= 0) {
							var offset = zk.currentPointer;
							left = offset[0] + 10;
							top = offset[1] + 10;
						} else {
							if (pos.indexOf("left") >= 0) left = x;
							else if (pos.indexOf("right") >= 0)	left = x + wdgap -1;
							else if (pos.indexOf("center") >= 0) left = x + wdgap / 2;
							else left = 0;
							
							if (pos.indexOf("top") >= 0) top = y;
							else if (pos.indexOf("bottom") >= 0) top = y + hghgap - 1;
							else if (pos.indexOf("center") >= 0) top = y + hghgap / 2;
							else top = 0;
							
							left = left < x ? x : left;
							top = top < y ? y : top;
						}
						st.left = jq.px(left);
						st.top = jq.px(top);
					}
				}
				$n.zk.cleanVisibility();
			}
		</script>]]>
		</embed>
	</device-config>

	<!-- ====================================================== -->
	<!-- Path a la pagina de error -->
	<!-- ====================================================== -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>error.zul</location>
	</error-page>
	<!-- Para que los ids de los elementos sean predecibles (para test con selenium) 
		<system-config> <id-generator-class>es.gva.dgm.tra.util.zk.IdGenerator </id-generator-class> 
		</system-config> -->
	<!-- Para que los botones salgan con trendy y así ser igual que los de upload -->
	<library-property>
		<name>org.zkoss.zul.Button.mold</name>
		<value>trendy</value>
	</library-property>

	<!-- Para debug -->
<!-- 	<log> -->
<!-- 		<log-base>org.zkoss</log-base> -->
<!-- 	</log> -->
<!-- 	<client-config> -->
<!-- 		<debug-js>true</debug-js> -->
<!-- 	</client-config> -->
<!-- 	<library-property> -->
<!-- 		<name>org.zkoss.web.classWebResource.cache</name> -->
<!-- 		<value>false</value> -->
<!-- 	</library-property> -->
</zk>
