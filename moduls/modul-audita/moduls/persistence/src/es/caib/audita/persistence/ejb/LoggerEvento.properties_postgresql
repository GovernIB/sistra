# Queries per POSTGRESQL

sql.select.tipoEvento.all=SELECT TIP_TIPO TIPO, TIP_AUDIT AUDITAR, TIP_DESC DESCRIPCION FROM AUD_TIPOEV
sql.select.evento.id=SELECT	AUD_CODI CODIGO, AUD_FECHA FECHA, AUD_TIPO TIPO, AUD_DESC DESCRIPCION, \
	AUD_NIVAUT NIVELAUTENTICACION, AUD_CODI USUARIOSEYCON, AUD_NIF DOCUMENTOIDENTIFICACION, \
	AUD_IDI IDIOMA, AUD_RESULT RESULTADO, AUD_MODTRA MODELOTRAMITE, AUD_VERTRA VERSIONTRAMITE, \
	AUD_IDPER idPersistencia, AUD_CLAVE CLAVE, AUD_PROCED PROCEDIMIENTO FROM AUD_AUDIT \
	WHERE AUD_CODI = ?
sql.select.evento.all=SELECT AUD_CODI CODIGO, AUD_FECHA FECHA, AUD_TIPO TIPO, AUD_DESC DESCRIPCION, \
	AUD_NIVAUT NIVELAUTENTICACION, AUD_CODI USUARIOSEYCON, AUD_NIF DOCUMENTOIDENTIFICACION, \
	AUD_IDI IDIOMA, AUD_RESULT RESULTADO, AUD_MODTRA MODELOTRAMITE, AUD_VERTRA VERSIONTRAMITE, \
	AUD_IDPER idPersistencia, AUD_CLAVE CLAVE, AUD_PROCED PROCEDIMIENTO FROM AUD_AUDIT 
sql.select.seq.aud=SELECT NEXTVAL('AUD_AUDSEQ')
sql.insert.evento=INSERT INTO AUD_AUDIT\
(\
  AUD_CODI    ,\
  AUD_FECHA   ,\
  AUD_TIPO    ,\
  AUD_DESC    ,\
  AUD_NIVAUT  ,\
  AUD_SEYCON  ,\
  AUD_NIF     ,\
  AUD_NOMBRE  ,\
  AUD_IDI     ,\
  AUD_RESULT  ,\
  AUD_MODTRA  ,\
  AUD_VERTRA  ,\
  AUD_IDPER   ,\
  AUD_CLAVE   ,\
  AUD_PROCED   \
)\
VALUES\
( ?, ?, ?, ?, \
  ?, ?, ?, ?,\
  ?, ?, ?, ?,\
  ?, ? ,?)

sql.consulta.test=SELECT to_char ( aud_nivaut ) nivel, COUNT(*) AS TOTAL FROM AUD_AUDIT \
	      		WHERE AUD_TIPO = 'INITRA' AND \
	            TRUNC(AUD_FECHA) >= TO_DATE('01/01/2006','dd/mm/yyyy') AND \
			    TRUNC(AUD_FECHA) <= TO_DATE('01/01/2007','dd/mm/yyyy') \
			    GROUP BY aud_nivaut